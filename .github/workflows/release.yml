name: Build and Release Apkeep Multi-Arch

on:
  push:
    branches: [ master ]
    tags:
      - 'v*' # Target tag pushes for releases
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# Restrict permissions to the least privilege needed
permissions:
  contents: read # Default for all jobs
  id-token: none
  actions: none

jobs:
  build_linux:
    runs-on: ubuntu-22.04
    env:
      # Define versions and paths as environment variables for easy updates
      APKEEP_DIR_NAME: "apkeep" # Should match repo name if workflow is in the repo
      OPENSSL_VERSION: "3.3.2"
      ANDROID_NDK_VERSION: "r26c"
      XWIN_VERSION: "0.6.5"
      MIN_ANDROID_SDK_VERSION: "26"

      # Derived variables (used within steps)
      OPENSSL_TARBALL: "openssl-$OPENSSL_VERSION.tar.gz"
      OPENSSL_URL: "https://www.openssl.org/source/$OPENSSL_TARBALL"
      ANDROID_NDK_ZIP: "android-ndk-$ANDROID_NDK_VERSION-linux.zip"
      ANDROID_NDK_URL: "https://dl.google.com/android/repository/$ANDROID_NDK_ZIP"
      ANDROID_NDK_SHA256: "<ADD_NDK_CHECKSUM_HERE>"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Base Environment
      run: |
        sudo dpkg --add-architecture armhf
        sudo dpkg --add-architecture i386
        sudo dpkg --add-architecture arm64
        sudo apt-get update
        sudo apt-get -y install --no-install-recommends \
          build-essential libssl-dev pkg-config unzip gcc-multilib \
          libc6-armhf-cross libc6-dev-armhf-cross gcc-arm-linux-gnueabihf libssl-dev:armhf \
          libc6-i386-cross libc6-dev-i386-cross gcc-i686-linux-gnu libssl-dev:i386 \
          libc6-arm64-cross libc6-dev-arm64-cross gcc-aarch64-linux-gnu libssl-dev:arm64

    - name: Install Rust Toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: |
          x86_64-unknown-linux-gnu
          armv7-unknown-linux-gnueabihf
          i686-unknown-linux-gnu
          aarch64-unknown-linux-gnu

    - name: Build Linux Targets
      run: |
        cd ${{ env.APKEEP_DIR_NAME }}
        cargo build --release --target x86_64-unknown-linux-gnu
        cargo build --release --target armv7-unknown-linux-gnueabihf
        cargo build --release --target i686-unknown-linux-gnu
        cargo build --release --target aarch64-unknown-linux-gnu

  build_android:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download and Verify Android NDK
      run: |
        wget -q "${{ env.ANDROID_NDK_URL }}"
        echo "${{ env.ANDROID_NDK_SHA256 }}  ${{ env.ANDROID_NDK_ZIP }}" | sha256sum -c -
        unzip -q "${{ env.ANDROID_NDK_ZIP }}" -d ~
        mv android-ndk-${{ env.ANDROID_NDK_VERSION }} ~/${{ env.NDK_CACHE_PATH }}
        rm "${{ env.ANDROID_NDK_ZIP }}"

    - name: Build Android Targets
      run: |
        cd ${{ env.APKEEP_DIR_NAME }}
        cargo build --release --target aarch64-linux-android
        cargo build --release --target armv7-linux-androideabi
        cargo build --release --target i686-linux-android
        cargo build --release --target x86_64-linux-android

  build_windows:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup xwin Environment
      run: |
        mkdir -p ${{ env.XWIN_BIN_CACHE_PATH }}
        curl -L "https://github.com/Jake-Shadle/xwin/releases/download/${{ env.XWIN_VERSION }}/xwin-${{ env.XWIN_VERSION }}-x86_64-unknown-linux-musl.tar.gz" | tar xz -C ${{ env.XWIN_BIN_CACHE_PATH }}

    - name: Build Windows Targets
      run: |
        cd ${{ env.APKEEP_DIR_NAME }}
        cargo build --release --target x86_64-pc-windows-msvc

  upload_release:
    needs: [build_linux, build_android, build_windows]
    runs-on: ubuntu-22.04
    permissions:
      contents: write # Only needed for this job
    steps:
    - name: Upload Release Assets
      uses: taiki-e/upload-rust-binary-action@v1
      with:
        bin: apkeep
        token: ${{ secrets.GITHUB_TOKEN }}
        targets: |
          x86_64-unknown-linux-gnu
          armv7-unknown-linux-gnueabihf
          i686-unknown-linux-gnu
          aarch64-unknown-linux-gnu
          aarch64-linux-android
          armv7-linux-androideabi
          i686-linux-android
          x86_64-linux-android
          x86_64-pc-windows-msvc
