name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
  
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: i686-linux-android
            os: ubuntu-latest
          - target: x86_64-linux-android
            os: ubuntu-latest
          - target: armv7-linux-androideabi
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install cross-compilation tools
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install libssl-dev
      - name: Install OpenSSL
        run: sudo apt-get install openssl
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}
        if: startsWith(matrix.target, 'armv7')
      - name: Build
        run: |
          export OPENSSL_DIR=/usr
          cargo build --release --target ${{ matrix.target }}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: apkeep
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
